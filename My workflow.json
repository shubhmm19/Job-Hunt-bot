{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 17
            },
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "5fd98ffe-9ee1-4400-844c-df2ea041628d",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "https://drive.google.com/file/d/1-cWkoUtATVHO6B6nln5HiW4NS6NfkYYp/view?usp=drive_link",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        208,
        0
      ],
      "id": "0fa0ffc9-12b9-4da4-950a-3533795a9461",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rAKAxPpvi91ll5RI",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        416,
        0
      ],
      "id": "f8c0fa01-c56a-4ee7-8e53-9dfee15a930a",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc",
          "mode": "list",
          "cachedResultName": "Job-Search n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Filter",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        624,
        0
      ],
      "id": "33f79d8e-1bd7-437b-9b0f-317cf8982bc1",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3AkEPxFc25oh2Nke",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let url = \"https://www.linkedin.com/jobs/search/?f_TPR=r86400\"\n\nconst keyword = $input.first().json.keyword\nconst location = $input.first().json.location\nconst experienceLevel = $input.first().json['experience level']\nconst remote = $input.first().json.remote\nconst jobType = $input.first().json['job type']\nconst easyApply = $input.first().json['Easy Apply']\n\nif (keyword != \"\") {\n  url += `&keywords=${keyword}`;\n}\n\nif (location != \"\") {\n  url += `&location=${location}`;\n}\n\nif (experienceLevel !== \"\") {\n  // Transform experience levels to LinkedIn codes\n  // Internship -> 1, Entry level -> 2, Associate -> 3\n  // Mid-Senior level -> 4, Director -> 5, Executive -> 6\n  const transformedExperiences = experienceLevel\n    .split(\",\")\n    .map((exp) => {\n      switch (exp.trim()) {\n        case \"Internship\": return \"1\";\n        case \"Entry level\": return \"2\";\n        case \"Associate\": return \"3\";\n        case \"Mid-Senior level\": return \"4\";\n        case \"Director\": return \"5\";\n        case \"Executive\": return \"6\";\n        default: return \"\";\n      }\n    })\n    .filter(Boolean);\n  url += `&f_E=${transformedExperiences.join(\",\")}`;\n}\n\nif (remote.length != \"\") {\n  // Transform remote options to LinkedIn codes\n  // On-Site -> 1, Remote -> 2, Hybrid -> 3\n  const transformedRemote = remote\n    .split(\",\")\n    .map((e) => {\n      switch (e.trim()) {\n        case \"Remote\": return \"2\";\n        case \"Hybrid\": return \"3\";\n        case \"On-Site\": return \"1\";\n        default: return \"\";\n      }\n    })\n    .filter(Boolean);\n  url += `&f_WT=${transformedRemote.join(\",\")}`;\n}\n\nif (jobType != \"\") {\n  // Transform job types to LinkedIn codes\n  // Full-time -> F, Part-time -> P, Contract -> C, etc.\n  const transformedJobType = jobType\n    .split(\",\")\n    .map((type) => type.trim().charAt(0).toUpperCase());\n  url += `&f_JT=${transformedJobType.join(\",\")}`;\n}\n\nif (easyApply != \"\") {\n  url += \"&f_EA=true\";\n}\n\nreturn {url}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        832,
        0
      ],
      "id": "728d2b27-b614-4017-ab02-01084be59da4",
      "name": "URL Search"
    },
    {
      "parameters": {
        "url": "=https://www.linkedin.com/jobs/search/?f_TPR=r86400&keywords=reactjs&location=Banglore&f_E=1,3,4&f_WT=3&f_JT=F&f_EA=true\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        0
      ],
      "id": "3957c44d-b8ad-4c77-9d8d-41b719209262",
      "name": "Fetch Job from Linkedin"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "links",
              "cssSelector": "ul.jobs-search__results-list li div a[class*=\"base-card\"]",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1536,
        -176
      ],
      "id": "4ff66e08-92ba-413f-8a7e-d14bbba52e6f",
      "name": "HTML"
    },
    {
      "parameters": {
        "fieldToSplitOut": "links",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2048,
        -224
      ],
      "id": "cfb50879-721a-4b99-827b-b5eb9e04084e",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2192,
        384
      ],
      "id": "c9df942c-982e-4c8a-8496-7a1b9b5e2622",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        16,
        192
      ],
      "id": "8a1857ea-17f9-44de-a268-4f0658d9f3b5",
      "name": "Wait",
      "webhookId": "7fcaffc2-bb28-476b-8b16-6bd8044551af"
    },
    {
      "parameters": {
        "url": "={{ $json.links }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        192
      ],
      "id": "fbc7e09b-6e09-41f5-8551-d59a670dfa1b",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "div h1"
            },
            {
              "key": "company",
              "cssSelector": "div span a"
            },
            {
              "key": "location",
              "cssSelector": "div span[class*='topcard__flavor topcard__flavor--bullet']"
            },
            {
              "key": "description",
              "cssSelector": "div.description__text.description__text--rich"
            },
            {
              "key": "jobid",
              "cssSelector": "a[data-item-type='semaphore']",
              "returnValue": "attribute"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        432,
        192
      ],
      "id": "dadf5b19-9753-465d-ae2a-8011e95a2ee7",
      "name": "HTML1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8ee95982-235f-4a9a-99fe-6e5103d12c3d",
              "name": "description",
              "value": "=={{ $json.description.replaceAll(/\\s+/g, \" \") }}",
              "type": "string"
            },
            {
              "id": "64c358c7-f7a1-41bc-b991-706e1469f2b0",
              "name": "jobid",
              "value": "=={{ $json.jobid['data-semaphore-content-urn'].split(\":\").last() }}",
              "type": "string"
            },
            {
              "id": "d8141fa1-e03f-479a-986e-895b5e2a54ef",
              "name": "applylink",
              "value": "=={{ \"https://www.linkedin.com/jobs/view/\"+ $json.jobid['data-semaphore-content-urn'].split(\":\").last() }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        640,
        192
      ],
      "id": "3ad4fa39-1f54-4d57-8808-9dd30cbe8829",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an assistant that helps match candidates to job opportunities. Your task is to review my resume, then analyze both the resume and job description to calculate a job matching score. Additionally, create a cover letter based on my resume and the job description. The cover letter should contain at least 2 paragraphs and should exclude the name, address, and signature sections from the beginning and end.\n\nWhen using special characters like quotation marks (\"), ensure they are properly escaped with a backslash. The output must be formatted as valid JSON that can be parsed without errors.\n\nFor example your response should be like: {\"score\": 80, \"coverLetter\": \"sample cover letter\" }\n\njob_description: {{ $json.description }}\nmy_resume: {{ $('Extract from File').item.json.text }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        784,
        240
      ],
      "id": "15e4c6f1-409b-47a8-b099-b5450adacc8e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        720,
        400
      ],
      "id": "db63f2cf-692a-4847-b729-2297d64a3c9e",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "C1buXTOzEsOeHUQ3",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.output.replaceAll(/```(?:json)?/g, \"\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1136,
        240
      ],
      "id": "e3371af8-16c1-4740-b879-148d180d78d6",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc",
          "mode": "list",
          "cachedResultName": "Job-Search n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 768048311,
          "mode": "list",
          "cachedResultName": "Result",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1M5rBiKUxZYYc9lnArksuGZ-0lAwcSEYodSlU_CcG4qc/edit#gid=768048311"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "link": "={{ $('Edit Fields').item.json.applylink }}",
            "Title": "={{ $('Edit Fields').item.json.title }}",
            "Compamy": "={{ $('Edit Fields').item.json.company }}",
            "Location": "={{ $('Edit Fields').item.json.location }}",
            "descrption": "={{ $('Edit Fields').item.json.description }}",
            "score": "={{ $json.score }}",
            "cover letter": "={{ $json.coverLetter }}"
          },
          "matchingColumns": [
            "link"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Compamy",
              "displayName": "Compamy",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "descrption",
              "displayName": "descrption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "cover letter",
              "displayName": "cover letter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1344,
        240
      ],
      "id": "d426dfae-9dfc-4e28-bc9e-931d8c270075",
      "name": "Append or update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3AkEPxFc25oh2Nke",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "334cae40-5946-4d43-a3cd-4f22e9a61648",
              "leftValue": "={{ $json.score }}",
              "rightValue": 20,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1552,
        240
      ],
      "id": "fb58fb15-3ee9-45b5-b817-b0d897982010",
      "name": "If"
    },
    {
      "parameters": {
        "chatId": "984751248",
        "text": "=Title: {{ $json.Title }}\nCompany: {{ $json.Compamy }}\nLocation: {{ $json.Location }}\nJob Score: {{ $json.score }}\nApply: {{ $json.link }}\nCopy Cover Letter from here - {{ $json['cover letter'] }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1680,
        48
      ],
      "id": "ace3f5f4-a111-46ac-9c6f-00c084283a02",
      "name": "Send a text message",
      "webhookId": "f4cb3e54-d065-4916-b030-ef1614dfdcda",
      "credentials": {
        "telegramApi": {
          "id": "lYldzLXiRUfYqGTZ",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "URL Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL Search": {
      "main": [
        [
          {
            "node": "Fetch Job from Linkedin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Job from Linkedin": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e52f7f1c-31eb-4931-a7bb-5303103274d3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9d149eb6212bf588a0ed6d6b3c4c11e26781fa7a37049ddadf8765672b7de0c2"
  },
  "id": "mW5Myo22m7T4YcAP",
  "tags": []
}